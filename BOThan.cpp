#include "BOThan.hpp"

BOThan::BOThan()
{

}

BOThan::BOThan(Client *cl): _botClient(cl)
{
	this->_dictionary["nice"] = "neis iawn";
	this->_dictionary["Say something welsh"] = "Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch";
	this->_dictionary["fuck"] = "chnachu bant, bruv";
	if (M_DEBUG)
	{
		std::string pic;
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&#%#%@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%(*. ** ,**//*//(((###&&@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#(.,,...,   ..,.,,,,,..,,*,,#&@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#/,,../,.///((((,*****..,,,*(./*,*/%&@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@@@@&(/,***,,**/***///(((/(###%#/*,*,.***(/(..*%&@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@@@&%** ,,..,*,//(/#((///*#%%%#%%%%/////*/*#((,//,*(%@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@@@%/* ......,.,,*/*,** .,...,**/(#%/%%////*/(*#(((/(.*%@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@@@&,/,./.....  ,,(*,..   .      .. ,,*/.(*(/((#(((#//#(,/%@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@&#/*/,.. .... ...,..    .          ...,,/**/##(((###(#(%#,#&@@@\n";
		pic += "@@@@@@@@@@@@@@@@@#/,..*..,,,..,,.. .   .             . ..,*/*%%%/#(####/#%(,%@@@\n";
		pic += "@@@@@@@@@@@@@@@@%/*,*...,*,,,,,   .           ..... .. .,,.//((%#/#(%#((/(#(/&@@\n";
		pic += "@@@@@@@@@@@@@@%(**,..,,*,./*,,,              ..     ......,*/((/%%(/#((//*/#/&&@\n";
		pic += "@@@@@@@@@@@@#%/*,.,,,**,,/,. .                 .. .  . ....,*((###%(#(//(**/*%&@\n";
		pic += "@@@@@@@@@@%(/....,,**,**,*                  . .       .  ...,*##/%#%*##(##/(/#@@\n";
		pic += "@@@@@@@@&#/,  .,,*****,,*#(#(%#/(******,,.....    ...........,*#%(#/#(#(#/*(*%@@\n";
		pic += "@@@@@@@%*.... .*(//,,,*.&@     ..,,,,*##/,,,,..  ........  .  .,/##(((%###*/(&@@\n";
		pic += "@@@@@&#,   .*/%&&%#((,  & .,,*./((/(////***&(,... ..   ...       ,#(((#%##//(&@@\n";
		pic += "@@@@@%/.. .*/#%%#,*/.   %.,//(/*,//((((((/*,,,@. .. .....,,,,.,*,//*#(/#(#(//%@@\n";
		pic += "@@@@%/./ ,*/(#*/( *.    &   ..,,,.,,*/((/((/*. &&,......,,,,*********///((#//%@@\n";
		pic += "@@@%//,,**/((,/** .      &    ,,,*,**//////**. %#&%@%#%/*/*,,,.,,*&&%*#(*%#,/&@@\n";
		pic += "@@&#(*.*.,//*/*/*,        &.   ..,*,.*,, ..  %%...,%@,(**(((///,*,,.  # /*(*/%@@\n";
		pic += "@@@%/,.,*///****,            &@    ....  . @,  ....#&,*((((((((/#/*,,# ((/(((%#@\n";
		pic += "@@@&/.,,////  *.*              . .  .,,,*,,*,,,,,..(&.,**,*,***/((*, %#(/*(###%&\n";
		pic += "@@@%(*.,*///.,,/        .....,,,,,,******,******,,,,#....,,........ *#((**#((#&@\n";
		pic += "@@@&/,,,*//,.,/,   . ....,,*****,*******,*****,*,**,,*@. ....  . . ./((*,((%@@@@\n";
		pic += "@@@@%/,**/*,.*/       .,,*******,**************,******,,,&% ..  .  .&&///(&@@@@@\n";
		pic += "@@@@@&%//**,,,/    .. .,,***,**,,.....,,,*******,******,. . .     *(((##%@@@@@@@\n";
		pic += "@@@@@@@@%#*,,,,      ..,,,,**(&,/,,.**,,,,..,,,****,,*,,...   .  /%#%&@@@@@@@@@@\n";
		pic += "@@@@@@@@@@#/*#%      .......,,,#/,.  ., ,**/*,**,,,,,,,,......../##&@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@%##..,     . .      .  /#    .   . , /%(,,,,,.,....,/%&&@@@@@@@@@@@@&\n";
		pic += "@@@@@@@@@@@&%/                       .*/(,,#*(%%/*,.,,,.....,*#%@@@@@@@@@@@@@@@%\n";
		pic += "@@@@@@@@@@&#/                     ...,,,,,,,*,,.   .. . .. ,(%&@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@       ....            ..,,,......,,..  ..    ,/#&@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@%/            ..             ..,*,,.,...   . ..,%#&@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@#,         ... .,.       . .....,,,,.,,,.....*(&&@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@%*.      ......,,,.   ........,,..,,,,.,*/(#%&@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@%/,.....,,...,,,..,*,,,,,,.,,,,,,**###%&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@&#(*,,,.,,.,,,..,,.,,,,,,,*....@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "@@@@@@@@@@@@@@@@@%(/,..,,,.,,..,,,,........,%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
		pic += "\n\n\t(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧Have no fear, BOThan's here✧ﾟ･: *ヽ(◕ヮ◕ヽ)\n\tIf you are an OPER, teach me new words with \n\t/TEACHBOTHAN [words] :[phrase]";
		std::cout << pic << std::endl;
	}
}

BOThan::~BOThan()
{

}

Client *BOThan::getBotClient()
{
	return (this->_botClient);
}

bool	BOThan::addToDict(std::string word, std::string phrase)
{
	if (!(this->_dictionary.insert(std::make_pair<std::string, std::string>(word, phrase)).second))
		return (false);
	return (true);
}

std::string	BOThan::getPhraseFromDict(std::string word)
{
	return (_dictionary[word]);
}

bool BOThan::checkBethaviour(std::string text)
{
	if (!(this->_dictionary.count(text)))
		return (false);
	return (true);
}
